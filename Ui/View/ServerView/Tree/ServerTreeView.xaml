<serverView:ServerViewBase x:Class="_1RM.View.ServerView.Tree.ServerTreeView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:_1RM.View.ServerView"
                xmlns:controls="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
                xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
                xmlns:s="https://github.com/canton7/Stylet"
                xmlns:model="clr-namespace:_1RM.Model"
                xmlns:serverTree="clr-namespace:_1RM.View.ServerView.Tree"
                xmlns:serverView="clr-namespace:_1RM.View.ServerView"
                mc:Ignorable="d" 
                d:DataContext="{d:DesignInstance serverTree:ServerTreeViewModel}"
                d:DesignHeight="450" d:DesignWidth="800"
                Focusable="True" 
                PreviewKeyDown="ServerTreeView_PreviewKeyDown">

    <serverView:ServerViewBase.Resources>
        <ResourceDictionary>
            <Style x:Key="SelectedCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Visibility" Value="Hidden"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=GridNode,Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </DataTrigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </serverView:ServerViewBase.Resources>

    <Grid Background="{DynamicResource PrimaryMidBrush}" PreviewMouseMove="MasterGrid_OnPreviewMouseMove"
          AllowDrop="True" DragOver="TreeViewItem_OnDragOver" Drop="TreeViewItem_OnDrop">

        <!-- Main tree view area -->
        <Grid Margin="0 21 0 0" Background="{DynamicResource BackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*" MinHeight="300"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- Tag indicator: popup when any selected tag which is not in the `shown tag list` -->
            <Grid Grid.Row="0" MinHeight="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="VerticalAlignment" Value="Top"></Setter>
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTagFiltersShown}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Center" 
                              Margin="0 10 0 0"
                              ItemsSource="{Binding TagFilters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="model:TagFilter">
                            <Border Margin="3,2" Padding="6,3"
                                    Background="{DynamicResource AccentMidBrush}"
                                    CornerRadius="5"
                                    VerticalAlignment="Center"
                                    ToolTip="{Binding TagName}"
                                    Tag="{Binding DataContext.TagsPanelViewModel, RelativeSource={RelativeSource AncestorType=serverView:ServerViewBase}}"
                                    >
                                <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource Unpin}" 
                                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2Visible}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Pin}" 
                                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Rename}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Connect}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}" 
                                                  CommandParameter="{Binding}"/>
                                        <!--<MenuItem Header="{DynamicResource 'Connect (New window)'}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnectToNewTab}" 
                                                  CommandParameter="{Binding}"/>-->
                                        <MenuItem Header="{DynamicResource 'Create desktop shortcut'}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateDesktopShortcut}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Delete}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}" 
                                                  CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Border.ContextMenu>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TagName}" 
                                               Foreground="{DynamicResource AccentTextBrush}" 
                                               Margin="0 0 3 0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExcluded}" Value="True">
                                                        <Setter Property="TextDecorations">
                                                            <Setter.Value>
                                                                <TextDecorationCollection>
                                                                    <TextDecoration Location="Strikethrough">
                                                                        <TextDecoration.Pen>
                                                                            <Pen Brush="{DynamicResource PrimaryMidBrush}" Thickness="3"></Pen>
                                                                        </TextDecoration.Pen>
                                                                    </TextDecoration>
                                                                </TextDecorationCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Button Width="10" 
                                            Height="10" 
                                            Tag="{Binding TagName}"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverView:ServerViewBase}, Path=DataContext.CmdTagRemove}"
                                            CommandParameter="{Binding TagName}"
                                            Style="{StaticResource ButtonBarAccentStyle}"
                                            attachProperty:VisionElement.Opacity="0.5"
                                            attachProperty:VisionElement.OpacityAccent="0.9">
                                        <Grid Height="10" Width="8">
                                            <Path Data="F1 M 47.910156 -44.000000 L 87.183594 -4.683594 L 83.316406 -0.816406 L 44.000000 -40.089844 L 4.683594 -0.816406 L 0.816406 -4.683594 L 40.089844 -44.000000 L 0.816406 -83.316406 L 4.683594 -87.183594 L 44.000000 -47.910156 L 83.316406 -87.183594 L 87.183594 -83.316406 Z "
                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  StrokeThickness="2" Stretch="Uniform" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>


            <!-- server list-->
            <Grid Grid.Row="1">
                <TreeView x:Name="MainTreeView" Background="Transparent" BorderThickness="0" 
                          ItemsSource="{Binding RootNodes}"
                          MouseMove="MainTreeView_OnMouseMove"
                          KeyboardNavigation.TabNavigation="Contained"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          Focusable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="{DynamicResource PrimaryTextColor}"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="{DynamicResource AccentLightColor}"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="{DynamicResource AccentLightColor}"/>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"/>
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Padding" Value="2,1"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="AllowDrop" Value="True"/>
                            <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>-->
                            <EventSetter Event="DragOver" Handler="TreeViewItem_OnDragOver"/>
                            <EventSetter Event="Drop" Handler="TreeViewItem_OnDrop"/>
                            <Style.Triggers>
                                <!-- Add bottom margin for folder items to create spacing -->
                                <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                    <Setter Property="Margin" Value="0,0,0,12"/>
                                </DataTrigger>
                                <!-- Add extra spacing for root folders -->
                                <DataTrigger Binding="{Binding IsRootFolder}" Value="True">
                                    <Setter Property="Margin" Value="0,0,0,16"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <!-- For folder nodes -->
                            <MenuItem Header="{DynamicResource 'New server'}" Command="{Binding CmdAddServerToNode}">
                                <MenuItem.Icon>
                                    <TextBlock Text="+"
                                               FontSize="14"
                                               FontWeight="SemiBold"
                                               Foreground="{DynamicResource PrimaryTextBrush}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource 'Create a folder'}" 
                                      Command="{Binding CmdCreateFolder}">
                                <MenuItem.Icon>
                                    <Path Data="M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z" 
                                          Width="12" Height="12" 
                                          Fill="{DynamicResource PrimaryTextBrush}" 
                                          Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <Grid Margin="0"
                                  Name="GridNode" 
                                  MouseDown="MainTreeViewItem_OnMouseDown"
                                  Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=serverTree:ServerTreeView} }"
                            >
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Margin" Value="0,1"/>
                                        <Style.Triggers>
                                            <!-- highlight when mouseover -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </Trigger>
                                            <!-- highlight when selected -->
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                                <Setter Property="Opacity" Value="0.2"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <!-- For folder nodes -->
                                        <MenuItem Header="{DynamicResource 'New server'}"
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdAddServerToNode}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="+"
                                                          FontSize="14"
                                                          FontWeight="SemiBold"
                                                          Foreground="{DynamicResource PrimaryTextBrush}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource 'Create a folder'}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateFolder}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <Path Data="M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource Rename}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                  IsEnabled="{Binding IsRootFolder, Converter={StaticResource ConverterBoolInverse}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdEditNode}"
                                                  CommandParameter="{Binding}">
                                            <!--<MenuItem.Icon>
                                                <Path Data="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>-->
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource Edit}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdMultiEditFolderServers}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <Path Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <!--<Separator Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"/>-->

                                        <!-- For server nodes -->
                                        <MenuItem Header="{DynamicResource Connect}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdConnectSelected}">
                                            <MenuItem.Icon>
                                                <Path Data="M12 2l3.09 6.26L22 9l-5.55 5.15L18 22l-6-3.27L6 22l1.55-7.85L2 9l6.91-.74L12 2z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource Edit}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdEditNode}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <Path Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <!-- todo: Duplicate 有错误 -->
                                        <MenuItem Header="{DynamicResource Duplicate}" 
                                                  Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdDuplicateNode}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource GeometryCross}" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <!--<Separator Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"/>-->

                                        <!-- Common items -->


                                        <Separator/>
                                        <MenuItem Header="Delete" 
                                                  IsEnabled="{Binding IsRootFolder, Converter={StaticResource ConverterBoolInverse}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdDeleteNode}"
                                                  CommandParameter="{Binding}">
                                            <MenuItem.Icon>
                                                <Path Data="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" 
                                                      Width="12" Height="12" 
                                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                                      Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <Grid Margin="0 3 20 3" MinWidth="200" MinHeight="20"
                                      Background="Transparent"
                                      MouseLeftButtonDown="TreeViewItemGrid_OnMouseLeftButtonDown">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!--<Border BorderThickness="1 0 0 0" BorderBrush=""></Border>-->

                                    <!-- For folder nodes -->
                                    <Border Grid.Column="0" Grid.ColumnSpan="2"
                                            Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                            VerticalAlignment="Center"
                                            >
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Margin="3 0 0 0" 
                                                      Width="20" Height="20" 
                                                      HorizontalAlignment="Left" 
                                                      Click="ItemsCheckBox_OnClick"
                                                      Style="{StaticResource SelectedCheckBoxStyle}"
                                                      IsChecked="{Binding IsCheckboxSelected, UpdateSourceTrigger=PropertyChanged}">
                                            </CheckBox>
                                            <Grid Width="16" Height="16" Margin="0,0,4,0">
                                                <Path Visibility="{Binding IsRootFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                      Fill="{DynamicResource AccentMidBrush}" 
                                                      Stretch="Uniform"
                                                      Data="{StaticResource GeometryFolder}"/>
                                                <Path Visibility="{Binding IsRootFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                      Fill="{DynamicResource AccentMidBrush}"
                                                      Stretch="Uniform"
                                                      Data="{DynamicResource GeometryDatabase}"/>
                                            </Grid>
                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" 
                                                       Foreground="{DynamicResource BackgroundTextBrush}" 
                                                       FontWeight="Bold"/>
                                        </StackPanel>
                                    </Border>

                                    <!-- For server nodes -->
                                    <Grid Grid.Column="0" Grid.ColumnSpan="2"
                                          Background="Transparent" 
                                          Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                          VerticalAlignment="Center">
                                        <Grid.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Server.CmdConnServer}"></MouseBinding>
                                        </Grid.InputBindings>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>


                                        <CheckBox Grid.Column="0" Margin="3 0 0 0" 
                                                  Width="20" Height="20" 
                                                  HorizontalAlignment="Left" 
                                                  Click="ItemsCheckBox_OnClick"
                                                  Style="{StaticResource SelectedCheckBoxStyle}"
                                                  IsChecked="{Binding IsCheckboxSelected, UpdateSourceTrigger=PropertyChanged}">
                                        </CheckBox>

                                        <Grid Grid.Column="1" Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0" 
                                                   Width="16" Height="16" Margin="0,0,4,0"
                                                   Source="{Binding Server.Server.IconImg}" 
                                                   RenderOptions.BitmapScalingMode="HighQuality"
                                                   VerticalAlignment="Center"/>

                                            <!-- Server Name -->
                                            <TextBlock Grid.Column="1" 
                                                       Text="{Binding Server.DisplayName}" 
                                                       VerticalAlignment="Center"
                                                       TextTrimming="CharacterEllipsis"
                                                       ToolTip="{Binding Server.DisplayName}"/>

                                            <!--brief note -->
                                            <ContentControl Grid.Column="2" 
                                                            Margin="0 0 10 0"
                                                            VerticalAlignment="Center"
                                                            Visibility="{Binding Server.HoverNoteDisplayControl, Converter={StaticResource ConverterEqual2Collapsed}, ConverterParameter={x:Null}}"
                                                            Content="{Binding Server.HoverNoteDisplayControl}"></ContentControl>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <!-- footer: show detail of a server -->
                <Grid Name="GridBottom" VerticalAlignment="Bottom" Height="30" Background="{DynamicResource PrimaryMidBrush}" IsHitTestVisible="False">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Opacity" Value="0.9"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedServerViewModel}" Value="{x:Null}">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <TextBlock Margin="5 0 10 0" 
                               Style="{StaticResource TextBlockBase}"
                               Text="{Binding SelectedServerViewModel.Server.ProtocolDisplayName}"
                               FontSize="{DynamicResource GlobalFontSizeSubtitle}" FontWeight="Bold"
                               Opacity="0.6"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center">
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                <Setter Property="Margin" Value="0 0 5 0"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding SelectedServerViewModel.Server.DisplayName}" Style="{StaticResource TextBlockBase}" Margin="5 0"></TextBlock>
                        <TextBlock Text="{Binding SelectedServerViewModel.Server.SubTitle}" Style="{StaticResource TextBlockBase}"></TextBlock>
                    </StackPanel>
                </Grid>

            </Grid>


            <!-- Popup when any item is selected -->
            <Grid Grid.Row="2" Background="{DynamicResource PrimaryMidBrush}" Height="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                        <Setter Property="Margin" Value="0 0 0 -50"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAnySelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin" AccelerationRatio="0.9">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,-50" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.400" Value="0,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.200" Value="0,0,0,-50" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Cancel}" Command="{Binding CmdCancelSelected}"></Button>
                    <TextBlock Style="{StaticResource TextBlockBase}" Text="{DynamicResource server_editor_multi_selected_count}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}"></TextBlock>
                    <TextBlock Style="{StaticResource TextBlockBase}" Text="{Binding SelectedCount}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}" Margin="5 0 0 0"></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Connect}" Command="{Binding CmdConnectSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Edit}" Command="{Binding CmdMultiEditSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource 'Create desktop shortcut'}" Command="{Binding CmdCreateDesktopShortcut}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Delete}" Command="{Binding CmdDeleteSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Export}" Command="{Binding CmdExportSelectedToJson}"></Button>
                </StackPanel>
            </Grid>
        </Grid>




        <!-- tag list: the page to config which tag should be display. -->
        <ContentControl Grid.Row="0" s:View.Model="{Binding TagListViewModel}"
                        Visibility="{Binding TagListViewModel, 
                                                    Converter={StaticResource ConverterEqual2Collapsed}, 
                                                    ConverterParameter={x:Null}}"
        >
        </ContentControl>

        <!-- Shared tabs component -->
        <local:ServerTabsView />
    </Grid>
</serverView:ServerViewBase>
