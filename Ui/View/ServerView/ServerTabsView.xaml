<UserControl x:Class="_1RM.View.ServerView.ServerTabsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
             xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
             xmlns:model="clr-namespace:_1RM.Model"
             xmlns:serverView="clr-namespace:_1RM.View.ServerView"
             mc:Ignorable="d"
             d:DesignHeight="50" d:DesignWidth="800">

    <Grid VerticalAlignment="Top">
        <!-- Top shadow border -->
        <Border BorderThickness="0,0,0,1"
                BorderBrush="{DynamicResource AccentMidBrush}"
                Background="{DynamicResource PrimaryDarkBrush}"
                Height="22">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="3"
                                  Direction="270"
                                  Opacity="0.4"
                                  Color="Black"
                                  BlurRadius="8"/>
            </Border.Effect>
        </Border>

        <!-- Main container with bottom rounded corners -->
        <Border BorderThickness="0,0,0,0"
                BorderBrush="{DynamicResource AccentMidBrush}"
                Background="{DynamicResource PrimaryMidBrush}"
                CornerRadius="0,0,8,8"
                Margin="0,0,0,1">
            <Grid MinHeight="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <!-- All Tab Button -->
                <Button MinWidth="90"
                        Command="{Binding CmdShowMainTab}"
                        Content="{DynamicResource All}"
                        Height="30"
                        Margin="4,4,4,4">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="6,6,6,6"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Margin="10,0"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedTabName}" Value=""/>
                                        <Condition Binding="{Binding TagListViewModel}" Value="{x:Null}"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedTabName}" Value="{x:Null}"/>
                                        <Condition Binding="{Binding TagListViewModel}" Value="{x:Null}"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Tags Tab Button -->
                <Button Grid.Column="1" MinWidth="90"
                        Command="{Binding CmdShowTagTab}"
                        BorderThickness="0"
                        Content="{DynamicResource Tags}"
                        Height="30"
                        Margin="4,4,4,4">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                            <Setter Property="Background" Value="{DynamicResource AccentMidBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="6,6,6,6"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Margin="12,0"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TagListViewModel}" Value="{x:Null}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding AppData.TagList.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Tags ScrollViewer -->
                <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Auto"
                              Margin="10 0 0 0"
                              Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, Path=Height}"
                              controls:ScrollViewerExtensions.IsHorizontalScrollOnWheelEnabled="true"
                              attachProperty:VisionElement.ForegroundAccent="{DynamicResource PrimaryTextBrush}"
                              attachProperty:VisionElement.BackgroundAccent="{DynamicResource PrimaryTextBrush}"
                              Style="{StaticResource ScrollViewMiniStyle}">
                    <StackPanel Orientation="Horizontal">
                        <ItemsControl Name="ListBoxTags"
                                      ItemsSource="{Binding HeaderTags}"
                                      Background="{DynamicResource PrimaryMidBrush}"
                                      Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ScrollViewer}, Path=Height}"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                      BorderThickness="0"
                                      Margin="0"
                                      Padding="0">
                            <ItemsControl.Style>
                                <Style TargetType="ItemsControl">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ItemsControl">
                                                <ItemsPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsControl.Style>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type model:Tag}">
                                    <Grid Tag="{Binding DataContext.TagsPanelViewModel, RelativeSource={RelativeSource AncestorType=serverView:ServerTabsView}}"
                                          AllowDrop="True"
                                          MouseMove="TagList_PreviewMouseMoveEvent"
                                          Drop="TagList_OnDrop"
                                          Background="Transparent">
                                        <Grid.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{DynamicResource Unpin}"
                                                          Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2Visible}}"
                                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}"
                                                          CommandParameter="{Binding}"/>
                                                <MenuItem Header="{DynamicResource Rename}"
                                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}"
                                                          CommandParameter="{Binding}"/>
                                                <MenuItem Header="{DynamicResource Connect}"
                                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}"
                                                          CommandParameter="{Binding}"/>
                                                <MenuItem Header="{DynamicResource 'Create desktop shortcut'}"
                                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateDesktopShortcut}"
                                                          CommandParameter="{Binding}"/>
                                                <MenuItem Header="{DynamicResource Delete}"
                                                          Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}"
                                                          CommandParameter="{Binding}"/>
                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                        <Border Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2Visible}}"
                                                  CornerRadius="6"
                                                  Margin="0,4,0,4"
                                                  MouseLeftButtonDown="HeaderTag_OnClick"
                                                  Tag="{Binding Name}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="MinWidth" Value="50" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"></Setter>
                                                    <Setter Property="Padding" Value="12 6 12 6"></Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                                        </Trigger>
                                                        <DataTrigger Value="True">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource ConverterIsEqual}" >
                                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=serverView:ServerTabsView}" Path="DataContext.SelectedTabName" Mode="OneWay"></Binding>
                                                                    <Binding Path="Name" Mode="OneWay"></Binding>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                                            <Setter Property="Cursor" Value="Arrow" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsPinned}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="{Binding Name}"
                                                       HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                                        <Setter Property="FontWeight" Value="SemiBold"></Setter>
                                                        <Setter Property="FontSize" Value="15"></Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource ConverterIsEqual}" >
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=serverView:ServerTabsView}" Path="DataContext.SelectedTabName" Mode="OneWay"></Binding>
                                                                        <Binding Path="Name" Mode="OneWay"></Binding>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>

                <!-- Add Button -->
                <CheckBox Grid.Column="3"
                          Name="CbPopForInExport"
                          Width="40" Height="30"
                          Margin="0,0,5,0">
                    <CheckBox.Template>
                        <ControlTemplate>
                            <Border Name="BG" Background="{DynamicResource AccentMidBrush}" CornerRadius="6">
                                <Grid Margin="1" VerticalAlignment="Center">
                                    <Path Data="M 41.888 18.304 L 41.888 23.584 L 23.584 23.584 L 23.584 41.888 L 18.304 41.888 L 18.304 23.584 L 0 23.584 L 0 18.304 L 18.304 18.304 L 18.304 0 L 23.584 0 L 23.584 18.304 Z"
                                          Stretch="Uniform" Name="Path"
                                          Margin="6" Stroke="{DynamicResource AccentTextBrush}" Fill="{DynamicResource AccentTextBrush}" StrokeThickness="2"></Path>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="CheckBox.IsMouseOver" Value="True">
                                    <Setter TargetName="BG" Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                    <Setter TargetName="Path" Property="Margin" Value="0"></Setter>
                                    <Setter TargetName="Path" Property="Stroke" Value="{DynamicResource AccentTextBrush}"></Setter>
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource AccentTextBrush}"></Setter>
                                </Trigger>
                                <Trigger Property="CheckBox.IsChecked" Value="True">
                                    <Setter TargetName="BG" Property="Background" Value="{DynamicResource AccentDarkBrush}"></Setter>
                                    <Setter TargetName="Path" Property="Stroke" Value="{DynamicResource AccentTextBrush}"></Setter>
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource AccentTextBrush}"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </CheckBox.Template>
                </CheckBox>

                <!-- Add Popup Menu -->
                <Popup Grid.Column="2"  Name="PopupMenuInExport"
                       IsOpen="{Binding ElementName=CbPopForInExport, Path=IsChecked}"
                       StaysOpen="False"
                       AllowsTransparency="True"
                       PlacementTarget="{Binding ElementName=CbPopForInExport}">
                    <Border Background="{DynamicResource PrimaryDarkBrush}" CornerRadius="5">
                        <Border BorderBrush="{DynamicResource AccentMidBrush}" BorderThickness="1" CornerRadius="5">
                            <Border.Resources>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemBaseStyle}">
                                    <Setter Property="Padding" Value="10,6"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                            </Border.Resources>
                            <StackPanel Orientation="Vertical">
                                <MenuItem Header="{DynamicResource Add}" Command="{Binding CmdAdd}" Style="{StaticResource MenuItemBaseStyle}">
                                    <MenuItem.Icon>
                                        <Path Data="{StaticResource GeometryCross}"
                                              Stretch="Uniform" Name="Path"
                                              Margin="2" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator Style="{StaticResource SeparatorBaseStyle}"/>
                                <MenuItem Header="{DynamicResource import_from_json}" Command="{Binding CmdImportFromJson}" Style="{StaticResource MenuItemBaseStyle}">
                                    <MenuItem.Icon>
                                        <Path UseLayoutRounding="True" Data="{StaticResource GeometryCopy}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource import_from_mremoteng_csv}" Command="{Binding CmdImportFromCsv}" Style="{StaticResource MenuItemBaseStyle}"></MenuItem>
                                <MenuItem Header="{DynamicResource import_from_rdp_file}" Command="{Binding CmdImportFromRdp}" Style="{StaticResource MenuItemBaseStyle}"></MenuItem>
                                <MenuItem Header="{DynamicResource import_from_sqlite_db}" Command="{Binding CmdImportFromDatabase}" Style="{StaticResource MenuItemBaseStyle}"></MenuItem>
                            </StackPanel>
                        </Border>
                    </Border>
                </Popup>
            </Grid>
        </Border>
    </Grid>
</UserControl>