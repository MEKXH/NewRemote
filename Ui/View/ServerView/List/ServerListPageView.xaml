<serverView:ServerViewBase x:Class="_1RM.View.ServerView.ServerListPageView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:system="clr-namespace:System;assembly=mscorlib"
                xmlns:view="clr-namespace:_1RM.View"
                xmlns:controls="clr-namespace:_1RM.Controls"
                xmlns:controls1="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
                xmlns:model="clr-namespace:_1RM.Model"
                xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
                xmlns:s="https://github.com/canton7/Stylet"
                xmlns:controls2="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                xmlns:serverView="clr-namespace:_1RM.View.ServerView"
                xmlns:dao="clr-namespace:_1RM.Service.DataSource.DAO"
                xmlns:locality="clr-namespace:_1RM.Service.Locality"
                mc:Ignorable="d"
                d:DataContext="{d:DesignInstance serverView:ServerListPageViewModel}"
                d:DesignHeight="450" d:DesignWidth="800">
    <serverView:ServerViewBase.Resources>
        <ResourceDictionary>
            <CollectionViewSource x:Key="ServerListItemSource" 
                                  Source="{Binding VmServerList}"
                                  Filter="ServerListItemSource_OnFilter">
            </CollectionViewSource>


            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ExpanderWithAnEye}"></Style>



            <system:Double x:Key="ServerItemHeight">34</system:Double>



            <Style TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid Name="Grid" FocusVisualStyle="{x:Null}" 
                                  PreviewMouseDown="ServerList_OnPreviewMouseDown"
                                  Background="{DynamicResource BackgroundBrush}"
                                  Visibility="{Binding Server.Id, Converter={StaticResource ConverterEqual2Collapsed}, ConverterParameter='0'}">

                                <Border x:Name="GridContainer"></Border>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="IsSelected" Value="True" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--drop effect-->
                <Setter Property="AllowDrop" Value="true"/>
                <EventSetter Event="MouseMove" Handler="ServerList_PreviewMouseMoveEvent"/>
                <EventSetter Event="Drop" Handler="ServerList_OnDrop"/>
                <!--drop end event-->
            </Style>

            <DataTemplate x:Key="DataTemplateForServerCards" DataType="view:ProtocolBaseViewModel">
                <Grid Visibility="{Binding IsVisible, Converter={StaticResource ConverterBool2Visible}}"
                      Height="164" Width="165">
                    <Grid.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CmdConnServer}"></MouseBinding>
                        <MouseBinding MouseAction="RightClick" Command="{Binding CmdEditServer}"></MouseBinding>
                    </Grid.InputBindings>
                    <controls:ServerCardItem ProtocolBaseViewModel="{Binding}">
                    </controls:ServerCardItem>
                </Grid>
            </DataTemplate>


            <DataTemplate x:Key="DataTemplateForServerList" DataType="view:ProtocolBaseViewModel">
                <Grid Name="Grid" FocusVisualStyle="{x:Null}" Background="{DynamicResource BackgroundBrush}"
                      RenderOptions.BitmapScalingMode="HighQuality"
                      SnapsToDevicePixels="True">
                    <Grid.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CmdConnServer}"></MouseBinding>
                        <MouseBinding MouseAction="RightClick" Command="{Binding CmdEditServer}"></MouseBinding>
                    </Grid.InputBindings>
                    <Border x:Name="GridContainer"></Border>
                    <controls:ServerLineItem ProtocolBaseViewModel="{Binding}" 
                                             MinHeight="{StaticResource ServerItemHeight}"
                                             Visibility="{Binding IsVisible, Converter={StaticResource ConverterBool2Visible}}"
                                             ></controls:ServerLineItem>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="GridContainer" Value="{DynamicResource AccentMidBrush}"></Setter>
                        <Setter Property="Opacity" Value="0.1" TargetName="GridContainer" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ServerListStyle" TargetType="ListBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerList}"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True"
                                                    ScrollUnit="Pixel"
                                                    VirtualizationMode="Recycling"
                                                    CacheLengthUnit="Item"
                                                    Margin="0 0 0 30"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Margin">
                    <Setter.Value>
                        <Thickness Top="{StaticResource ServerItemHeight}"></Thickness>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentViewInListPage}" Value="{x:Static view:EnumServerViewStatus.Card}">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <controls2:VirtualizingWrapPanel IsVirtualizing="True"
                                                                     ScrollUnit="Item"
                                                                     SpacingMode="None"
                                                                     Margin="15 10 0 20"
                                                                     Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox}, Path=ActualWidth}"></controls2:VirtualizingWrapPanel>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerCards}"></Setter>
                        <Setter Property="Margin" Value="0"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <serverView:NameMaxWidthConverter x:Key="NameMaxWidthConverter" />
            <serverView:NoteMaxWidthConverter x:Key="NoteMaxWidthConverter" />
        </ResourceDictionary>
    </serverView:ServerViewBase.Resources>






    <Grid Background="{DynamicResource PrimaryDarkBrush}" Grid.IsSharedSizeScope="True"
          RenderOptions.BitmapScalingMode="HighQuality"
          RenderOptions.ClearTypeHint="Enabled"
          SnapsToDevicePixels="True">
              <Grid Margin="0 40 0 0" Background="{DynamicResource BackgroundBrush}"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    SnapsToDevicePixels="True">
            <!-- Modern gradient border effect -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*" MinHeight="300"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Background="{DynamicResource BackgroundBrush}"
                    BorderBrush="{DynamicResource AccentMidBrush}"
                    BorderThickness="0,0,0,0"
                    Opacity="0.3"/>

            <!-- Tag indicator: popup when any selected tag which is not in the `shown tag list` -->
            <Grid Grid.Row="0" MinHeight="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="VerticalAlignment" Value="Top"></Setter>
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTagFiltersShown}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Center" 
                              Margin="0 10 0 0"
                              ItemsSource="{Binding TagFilters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="model:TagFilter">
                            <Border Margin="3,2" Padding="6,3"
                                    Background="{DynamicResource AccentMidBrush}"
                                    CornerRadius="5"
                                    VerticalAlignment="Center"
                                    ToolTip="{Binding TagName}"
                                    Tag="{Binding DataContext.TagsPanelViewModel, RelativeSource={RelativeSource AncestorType=serverView:ServerViewBase}}"
                                    >
                                <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource Unpin}" 
                                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2Visible}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Pin}" 
                                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Rename}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Connect}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}" 
                                                  CommandParameter="{Binding}"/>
                                        <!--<MenuItem Header="{DynamicResource 'Connect (New window)'}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnectToNewTab}" 
                                                  CommandParameter="{Binding}"/>-->
                                        <MenuItem Header="{DynamicResource 'Create desktop shortcut'}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateDesktopShortcut}" 
                                                  CommandParameter="{Binding}"/>
                                        <MenuItem Header="{DynamicResource Delete}" 
                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}" 
                                                  CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Border.ContextMenu>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TagName}"
                                               Foreground="{DynamicResource BackgroundTextBrush}"
                                               FontWeight="Medium"
                                               FontSize="{DynamicResource GlobalFontSizeBody}"
                                               Margin="0 0 3 0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExcluded}" Value="True">
                                                        <Setter Property="TextDecorations">
                                                            <Setter.Value>
                                                                <TextDecorationCollection>
                                                                    <TextDecoration Location="Strikethrough">
                                                                        <TextDecoration.Pen>
                                                                            <Pen Brush="{DynamicResource PrimaryMidBrush}" Thickness="3"></Pen>
                                                                        </TextDecoration.Pen>
                                                                    </TextDecoration>
                                                                </TextDecorationCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Button Width="10" 
                                            Height="10" 
                                            Tag="{Binding TagName}"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverView:ServerViewBase}, Path=DataContext.CmdTagRemove}"
                                            CommandParameter="{Binding TagName}"
                                            Style="{StaticResource ButtonBarAccentStyle}"
                                            attachProperty:VisionElement.Opacity="0.5"
                                            attachProperty:VisionElement.OpacityAccent="0.9">
                                        <Grid Height="10" Width="8">
                                            <Path Data="F1 M 47.910156 -44.000000 L 87.183594 -4.683594 L 83.316406 -0.816406 L 44.000000 -40.089844 L 4.683594 -0.816406 L 0.816406 -4.683594 L 40.089844 -44.000000 L 0.816406 -83.316406 L 4.683594 -87.183594 L 44.000000 -47.910156 L 83.316406 -87.183594 L 87.183594 -83.316406 Z "
                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  StrokeThickness="2" Stretch="Uniform" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>


            <!-- server list-->
            <Grid Grid.Row="1">

                <Grid Name="GridHeader" Height="{StaticResource ServerItemHeight}" VerticalAlignment="Top" ZIndex="999">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAddToolTipShow}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentViewInListPage}" Value="{x:Static view:EnumServerViewStatus.Card}">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <!-- Compact header with clean background -->
                    <Border Background="{DynamicResource BackgroundBrush}"
                            BorderBrush="{DynamicResource PrimaryMidBrush}"
                            BorderThickness="0,0,0,1">
                        <Border.Margin>
                            <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                        </Border.Margin>
                    </Border>
                    <Grid VerticalAlignment="Center">
                        <Grid.Margin>
                            <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                        </Grid.Margin>
                        <Grid.Resources>
                            <Style TargetType="Path" x:Key="HeaderPathStyle">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="StrokeThickness" Value="1" />
                                <Setter Property="Width" Value="20" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Selector"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol" MinWidth="100"></ColumnDefinition>
                            <ColumnDefinition Width="40" SharedSizeGroup="Span"></ColumnDefinition>
                            <ColumnDefinition Width="{Binding NameWidth}" SharedSizeGroup="Name" MinWidth="50"
                                              MaxWidth="{Binding NoteWidth, Converter={StaticResource NameMaxWidthConverter}}"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Address" MinWidth="150" MaxWidth="250"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Actions" MinWidth="60" MaxWidth="80"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <CheckBox Margin="12 0" Width="18" Height="18" HorizontalAlignment="Left"
                                          IsChecked="{Binding IsSelectedAll, Mode=TwoWay}"
                                          x:Name="CheckBoxSelectedAll"
                                          Click="ItemsCheckBox_OnClick"
                                          >
                        </CheckBox>

                        <!--protocol name-->
                        <Grid Grid.Column="1">
                            <Button HorizontalContentAlignment="Left" Style="{StaticResource ButtonBarPrimaryStyle}"
                                Margin="0 0 10 0"
                                attachProperty:VisionElement.BorderCornerRadius="0"
                                Background="Transparent"
                                Foreground="{DynamicResource PrimaryTextBrush}"
                                FontFamily="{DynamicResource GlobalFontMono}"
                                FontSize="{DynamicResource GlobalFontSizeBody}"
                                FontWeight="Medium"
                                Command="{Binding CmdReOrder}" CommandParameter="{x:Static locality:EnumServerOrderBy.ProtocolAsc}">
                                <DockPanel>
                                    <TextBlock Style="{StaticResource TextBlockBase}" Margin="0,0,5,0" Text="{DynamicResource Protocol}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" FontWeight="Medium" DockPanel.Dock="Left"></TextBlock>
                                    <Path Data="M 7,3 L 13,3 L 10,0 L 7,3"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter={x:Static locality:EnumServerOrderBy.ProtocolAsc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center"
                                    >
                                    </Path>
                                    <Path Data="M 7,0 L 10,3 L 13,0 L 7,0"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter={x:Static locality:EnumServerOrderBy.ProtocolDesc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center"
                                    >
                                    </Path>
                                </DockPanel>
                            </Button>
                        </Grid>

                        <!--display name-->
                        <Grid Grid.Column="3" SizeChanged="ServerName_SizeChanged">
                            <Button Grid.Column="3" HorizontalContentAlignment="Left" Margin="0 0 10 0" Style="{StaticResource ButtonBarPrimaryStyle}"
                                attachProperty:VisionElement.BorderCornerRadius="0"
                                Background="Transparent"
                                Foreground="{DynamicResource PrimaryTextBrush}"
                                FontFamily="{DynamicResource GlobalFontMono}"
                                FontSize="{DynamicResource GlobalFontSizeBody}"
                                FontWeight="Medium"
                                Command="{Binding CmdReOrder}" CommandParameter="{x:Static locality:EnumServerOrderBy.NameAsc}">
                                <DockPanel>
                                    <TextBlock Margin="0,0,5,0" Text="{DynamicResource Name}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" FontWeight="Medium" DockPanel.Dock="Left"></TextBlock>
                                    <Path Data="M 7,3 L 13,3 L 10,0 L 7,3"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy,
                                                    Converter={StaticResource ConverterEqual2Visible},
                                                    ConverterParameter={x:Static locality:EnumServerOrderBy.NameAsc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center"
                                    >
                                    </Path>
                                    <Path Data="M 7,0 L 10,3 L 13,0 L 7,0"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter={x:Static locality:EnumServerOrderBy.NameDesc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center">
                                    </Path>
                                </DockPanel>
                            </Button>
                        </Grid>
                        <GridSplitter Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="2" Background="{DynamicResource PrimaryMidBrush}" Opacity="0.5"/>

                        <!--address-->
                        <Grid Grid.Column="4">
                            <Button HorizontalContentAlignment="Left" Style="{StaticResource ButtonBarPrimaryStyle}"
                                    Margin="0 0 10 0"
                                    attachProperty:VisionElement.BorderCornerRadius="0"
                                    Background="Transparent"
                                    Foreground="{DynamicResource PrimaryTextBrush}"
                                    FontFamily="{DynamicResource GlobalFontMono}"
                                    FontSize="{DynamicResource GlobalFontSizeBody}"
                                    FontWeight="Medium"
                                    Command="{Binding CmdReOrder}" CommandParameter="{x:Static locality:EnumServerOrderBy.AddressAsc}">
                                <DockPanel>
                                    <TextBlock Margin="0,0,5,0"
                                               Style="{StaticResource TextBlockBase}"
                                               Text="{DynamicResource Target}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" FontWeight="Medium" DockPanel.Dock="Left"></TextBlock>
                                    <Path Data="M 7,3 L 13,3 L 10,0 L 7,3"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy, Converter={StaticResource ConverterEqual2Visible},
                                                        ConverterParameter={x:Static locality:EnumServerOrderBy.AddressAsc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center"
                                    >
                                    </Path>
                                    <Path Data="M 7,0 L 10,3 L 13,0 L 7,0"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                                          Style="{StaticResource HeaderPathStyle}"
                                          Visibility="{Binding ServerOrderBy,
                                                        Converter={StaticResource ConverterEqual2Visible},
                                                        ConverterParameter={x:Static locality:EnumServerOrderBy.AddressDesc}}"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="Center"
                                    >
                                    </Path>
                                </DockPanel>
                            </Button>
                        </Grid>

                        <GridSplitter Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="2" Background="{DynamicResource PrimaryMidBrush}" Opacity="0.5"/>

                        
                        <!-- Actions column header -->
                        <Grid Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="操作"
                                       Style="{StaticResource TextBlockBase}"
                                       FontFamily="{DynamicResource GlobalFontMono}"
                                       FontSize="{DynamicResource GlobalFontSizeBody}"
                                       FontWeight="Medium"
                                       Foreground="{DynamicResource PrimaryTextBrush}"
                                       Opacity="0.7"
                                       HorizontalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </Grid>

                <ListBox Name="LvServerCards"
                         HorizontalContentAlignment="Stretch"
                         SelectedItem="{Binding SelectedServerViewModel}"
                         ItemsSource="{Binding Source={StaticResource ServerListItemSource}}"
                         BorderThickness="0" Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                         VirtualizingPanel.ScrollUnit="Pixel"
                         Style="{StaticResource ServerListStyle}">

                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="AllowDrop" Value="true"/>
                                    <!--drop end event-->
                                    <EventSetter Event="Drop" Handler="ServerList_OnDrop"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Grid>
                                                    <Expander IsExpanded="{Binding Items[0].GroupedIsExpanded, FallbackValue=False, TargetNullValue=False}"
                                                              Background="{DynamicResource BackgroundBrush}" 
                                                              Foreground="{DynamicResource BackgroundTextBrush}" 
                                                              Style="{StaticResource ExpanderWithAnEye}"
                                                              BorderThickness="0">
                                                        <Expander.Header>
                                                            <StackPanel Orientation="Horizontal" AllowDrop="True">
                                                                <CheckBox Margin="12 0" Width="18" Height="18" HorizontalAlignment="Left"
                                                                          x:Name="HeaderCheckBox"
                                                                          Click="ItemsCheckBox_OnClick"
                                                                >
                                                                </CheckBox>


                                                                <StackPanel Background="Transparent" 
                                                                            Orientation="Horizontal">
                                                                    <!--drag this element to sort groups-->
                                                                    <Grid Background="Transparent"
                                                                          Cursor="SizeNS"
                                                                          ToolTip="Drag to reorder groups"
                                                                          PreviewMouseDown="ServerListExpanderIcon_OnPreviewMouseDown"
                                                                          PreviewMouseMove="ServerList_PreviewMouseMoveEvent">
                                                                        <Grid.Style>
                                                                            <Style TargetType="Grid">
                                                                                <Setter Property="Opacity" Value="0.2"></Setter>
                                                                                <Style.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Opacity" Value="1"></Setter>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Path Fill="{DynamicResource PrimaryTextBrush}"
                                                                              Width="15" Height="15"
                                                                              Stretch="Uniform"
                                                                              Data="M108.208681 670.888449c20.874205-16.374376 50.998058-12.87451 67.372434 7.999695l124.495258 158.368968V48.03717c0-26.498991 21.499181-47.998172 47.998172-47.998171S396.072717 21.53818 396.072717 48.03717v927.964658c0 20.499219-12.999505 38.623529-32.373767 45.373272-4.99981 1.749933-10.374605 2.6249-15.624405 2.6249-14.499448 0-28.498915-6.499752-37.748562-18.3743L100.08399 738.260883C83.709614 717.511673 87.334476 687.262825 108.208681 670.888449zM634.063653 2.663899c19.249267-6.749743 40.748448-0.374986 53.372967 15.7494l210.241993 267.364817c16.374376 20.74921 12.749514 50.998058-8.12469 67.372434-20.74921 16.374376-50.998058 12.87451-67.372434-7.999695l-124.495259-158.368969v789.219942c0 26.498991-21.499181 47.998172-47.998172 47.998172s-47.998172-21.499181-47.998172-47.998172V48.03717c0.124995-20.374224 13.1245-38.623529 32.373767-45.373271z m0 0"></Path>
                                                                    </Grid>

                                                                    <TextBlock FontWeight="Bold" 
                                                                               Style="{StaticResource TextBlockBase}"
                                                                               FontSize="{DynamicResource GlobalFontSizeSubtitle}"
                                                                               Text="{Binding Path=Name}" 
                                                                               Margin="0,0,0,0"/>


                                                                    <!--Show database status-->
                                                                    <Button Margin="10 0 0 0"
                                                                            x:Name="ButtonDbStatus"
                                                                            Background="Transparent"
                                                                            attachProperty:VisionElement.BackgroundAccent="Transparent"
                                                                            attachProperty:VisionElement.BackgroundOnMouseDown="Transparent"
                                                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverView:ServerViewBase}, Path=DataContext.CmdRefreshDataSource}"
                                                                            CommandParameter="{Binding Name}"
                                                                            ToolTip="{Binding Name.StatusInfo}">
                                                                        <Button.Style>
                                                                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarAccentStyle}">
                                                                                <Setter Property="Content">
                                                                                    <Setter.Value>
                                                                                        <Path Height="20" Width="20" 
                                                                                                UseLayoutRounding="True" Stretch="Uniform">
                                                                                            <Path.Style>
                                                                                                <Style TargetType="Path">
                                                                                                    <Setter Property="Data" Value="{StaticResource GeometryCloudDisconnected}"></Setter>
                                                                                                    <Setter Property="Fill" Value="Red"></Setter>
                                                                                                    <Style.Triggers>
                                                                                                        <MultiDataTrigger>
                                                                                                            <MultiDataTrigger.Conditions>
                                                                                                                <Condition Binding="{Binding Name.Status}" Value="{x:Static dao:EnumDatabaseStatus.OK}"/>
                                                                                                                <Condition Binding="{Binding Name.IsWritable}" Value="True"/>
                                                                                                            </MultiDataTrigger.Conditions>
                                                                                                            <MultiDataTrigger.Setters>
                                                                                                                <Setter Property="Data" Value="{StaticResource GeometryCloudConnected}"></Setter>
                                                                                                                <Setter Property="Opacity" Value="0.2"></Setter>
                                                                                                                <Setter Property="Fill" Value="Green"></Setter>
                                                                                                            </MultiDataTrigger.Setters>
                                                                                                        </MultiDataTrigger>
                                                                                                        <MultiDataTrigger>
                                                                                                            <MultiDataTrigger.Conditions>
                                                                                                                <Condition Binding="{Binding Name.Status}" Value="{x:Static dao:EnumDatabaseStatus.OK}"/>
                                                                                                                <Condition Binding="{Binding Name.IsWritable}" Value="False"/>
                                                                                                            </MultiDataTrigger.Conditions>
                                                                                                            <MultiDataTrigger.Setters>
                                                                                                                <Setter Property="Data" Value="{StaticResource GeometryCloudConnectedReadonly}"></Setter>
                                                                                                                <Setter Property="Opacity" Value="0.2"></Setter>
                                                                                                                <Setter Property="Fill" Value="Green"></Setter>
                                                                                                            </MultiDataTrigger.Setters>
                                                                                                        </MultiDataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Path.Style>
                                                                                        </Path>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Style.Triggers>
                                                                                    <!--Show reconnect button when hover-->
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Content">
                                                                                            <Setter.Value>
                                                                                                <Grid Height="20" Width="20" >
                                                                                                    <Path Height="16" Width="16" UseLayoutRounding="True" Stretch="Uniform">
                                                                                                        <Path.Style>
                                                                                                            <Style TargetType="Path">
                                                                                                                <Setter Property="Data" Value="{StaticResource GeometryRefresh}"></Setter>
                                                                                                                <Setter Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                                                                                            </Style>
                                                                                                        </Path.Style>
                                                                                                    </Path>
                                                                                                </Grid>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Button.Style>
                                                                    </Button>


                                                                    <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverView:ServerViewBase}, Path=DataContext.CmdAdd}"
                                                                            CommandParameter="{Binding Name}"
                                                                            IsEnabled="{Binding Name.IsWritable}"
                                                                            Visibility="{Binding Name.Status, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter={x:Static dao:EnumDatabaseStatus.OK}}"
                                                                            Background="Transparent"
                                                                            Margin="0"
                                                                            HorizontalAlignment="Right"
                                                                            FontSize="14"
                                                                            FontWeight="SemiBold"
                                                                            Padding="8,0"
                                                                            attachProperty:VisionElement.BackgroundAccent="Transparent"
                                                                            attachProperty:VisionElement.BackgroundOnMouseDown="Transparent"
                                                                            Style="{StaticResource ButtonAccentStyle}">
                                                                        <TextBlock Text="{DynamicResource Add}"
                                                                                 Foreground="{DynamicResource PrimaryTextBrush}">
                                                                            </TextBlock>
                                                                    </Button>


                                                                    <!--Show reconnect info if lost connect-->
                                                                    <TextBlock FontSize="{DynamicResource GlobalFontSizeBody}" Margin="5 0 0 0" 
                                                                               Foreground="{DynamicResource PrimaryTextBrush}"
                                                                               Opacity="0.5"
                                                                               VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Name.ReconnectInfo}">
                                                                        <TextBlock.Style>
                                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding Name.Status, Converter={StaticResource ConverterIsEqual2Static}, ConverterParameter={x:Static dao:EnumDatabaseStatus.OK}}" Value="False">
                                                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                                                    </DataTrigger>
                                                                                    <DataTrigger Binding="{Binding ElementName=ButtonDbStatus, Path=IsMouseOver}" Value="True">
                                                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </TextBlock.Style>
                                                                    </TextBlock>

                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <ItemsPresenter />
                                                        </Expander.Content>
                                                    </Expander>

                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                </ListBox>


                <!-- footer: show detail of a server -->
                <Grid Name="GridBottom" VerticalAlignment="Bottom" Height="30" Background="{DynamicResource PrimaryMidBrush}" IsHitTestVisible="False">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Opacity" Value="0.9"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedServerViewModel}" Value="{x:Null}">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                <Setter Property="Margin" Value="0 0 5 0"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding SelectedServerViewModel.Server.DisplayName}" Style="{StaticResource TextBlockBase}" Margin="5 0"></TextBlock>
                        <TextBlock Text="{Binding SelectedServerViewModel.Server.SubTitle}" Style="{StaticResource TextBlockBase}"></TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>


            <!-- tooltip for how to add -->
            <Border Grid.Row="1" HorizontalAlignment="Right" Visibility="{Binding IsAddToolTipShow, Converter={StaticResource ConverterBool2Visible}}">
                <StackPanel>
                    <Path Fill="{DynamicResource BackgroundTextBrush}" 
                          Margin="25 10 30 5" Width="50" HorizontalAlignment="Right"
                          Stretch="UniformToFill" Data="M 70.3711 1.2207 L 63.1409 2.666 L 68.054 2.78 C 61.006 12.645 49.14 12.505 47 24 C 46.938 24.449 47.885 24.549 48 24 C 50.066 12.953 62.38 12.673 68.819 3.201 L 69 8 Z" />
                    <TextBlock Margin="0 0 10 0" Foreground="{DynamicResource BackgroundTextBrush}" FontSize="22" FontWeight="Bold" HorizontalAlignment="Right">Add new session</TextBlock>
                    <StackPanel Orientation="Horizontal" Margin="0 0 10 0" 
                                Visibility="{Binding LauncherSettingViewModel.LauncherEnabled, Converter={StaticResource ConverterBool2Visible}}"
                                HorizontalAlignment="Right">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"></Setter>
                                <Setter Property="Margin" Value="5 0 0 0"></Setter>
                                <Setter Property="FontSize" Value="16"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding LauncherSettingViewModel.LauncherHotKeyStr}"></TextBlock>
                        <TextBlock Text=" to open the launcher"></TextBlock>
                    </StackPanel>
                </StackPanel>
            </Border>


            <Border Grid.Row="1" HorizontalAlignment="Left" MinHeight="100" MinWidth="100" 
                    Margin="10 0 0 0"
                    Visibility="{Binding IsAddToolTipShow, Converter={StaticResource ConverterBool2Visible}}">
                <StackPanel>
                    <Path Fill="{DynamicResource BackgroundTextBrush}" 
                          Margin="80 10 30 5" Width="60" HorizontalAlignment="Left"
                          Stretch="UniformToFill" Data="M 67 0 L 62 4 L 66.62 2.035 C 66 12 47 10 47 24 C 47 24 47 24 48 24 C 48 10 67 13 67.362 2.074 L 72 4 Z" />
                    <TextBlock Margin="0 0 10 0" 
                               Style="{StaticResource TextBlockBase}"
                               Foreground="{DynamicResource BackgroundTextBrush}" 
                               FontSize="24" FontWeight="Bold">Right-click on a tag</TextBlock>
                    <TextBlock Margin="5 0 0 0"
                               Style="{StaticResource TextBlockBase}"
                               FontSize="22" Foreground="{DynamicResource BackgroundTextBrush}"  
                    >and pin it here to enable grouping function.</TextBlock>
                </StackPanel>
            </Border>



            <!-- popup when any item is selected-->
            <Grid Grid.Row="2" Height="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                        <Setter Property="Margin" Value="0 0 0 -50"></Setter>
                        <Setter Property="Opacity" Value="0"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAnySelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Margin"
                                                         From="0,0,0,-50" To="0,0,0,0" Duration="0:0:0.250"/>
                                            <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" Duration="0:0:0.250"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Margin"
                                                         From="0,0,0,0" To="0,0,0,-50" Duration="0:0:0.200"/>
                                            <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0" Duration="0:0:0.200"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <!-- Modern elevated background -->
                <Border Background="{DynamicResource PrimaryMidBrush}"
                        BorderBrush="{DynamicResource AccentMidBrush}"
                        BorderThickness="0,1,0,0"
                        CornerRadius="8,8,0,0">
                    <Border.Effect>
                        <DropShadowEffect Color="Black"
                                          Direction="270"
                                          ShadowDepth="4"
                                          BlurRadius="12"
                                          Opacity="0.3"/>
                    </Border.Effect>
                </Border>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12,0,0,0">
                    <Button Height="30" MinWidth="75" Margin="0 0 10 0" Content="{DynamicResource Cancel}"
                            Command="{Binding CmdCancelSelected}"
                            Style="{StaticResource ButtonBarPrimaryStyle}"
                            Background="{DynamicResource BackgroundBrush}"
                            Foreground="{DynamicResource BackgroundTextBrush}"
                            BorderBrush="{DynamicResource AccentMidBrush}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                    <TextBlock Style="{StaticResource TextBlockBase}"
                               Text="{DynamicResource server_editor_multi_selected_count}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource AccentTextBrush}"
                               FontWeight="Medium"/>
                    <TextBlock Style="{StaticResource TextBlockBase}"
                               Text="{Binding SelectedCount}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource AccentTextBrush}"
                               FontWeight="Bold"
                               Margin="5 0 0 0"/>
                </StackPanel>

                <!-- Modern button groups with dividers -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,12,0">
                    <!-- Primary action: Connect -->
                    <Button Height="30" MinWidth="80" Margin="0 0 10 0"
                            Content="{DynamicResource Connect}"
                            Command="{Binding CmdConnectSelected}"
                            Style="{StaticResource ButtonAccentStyle}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                    <!-- Divider -->
                    <Border Width="1" Margin="0 5 10 5" Background="{DynamicResource PrimaryTextBrush}" Opacity="0.3"/>

                    <!-- Edit actions group -->
                    <Button Height="30" MinWidth="70" Margin="0 0 8 0"
                            Content="{DynamicResource Edit}"
                            Command="{Binding CmdMultiEditSelected}"
                            Style="{StaticResource ButtonBarPrimaryStyle}"
                            Background="{DynamicResource PrimaryMidBrush}"
                            Foreground="{DynamicResource PrimaryTextBrush}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                    <!-- Divider -->
                    <Border Width="1" Margin="0 5 8 5" Background="{DynamicResource PrimaryTextBrush}" Opacity="0.3"/>

                    <!-- Secondary actions group -->
                    <Button Height="30" MinWidth="85" Margin="0 0 8 0"
                            Content="{DynamicResource 'Create desktop shortcut'}"
                            Command="{Binding CmdCreateDesktopShortcut}"
                            Style="{StaticResource ButtonBarPrimaryStyle}"
                            Background="{DynamicResource PrimaryMidBrush}"
                            Foreground="{DynamicResource PrimaryTextBrush}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                    <!-- Divider -->
                    <Border Width="1" Margin="0 5 8 5" Background="{DynamicResource PrimaryTextBrush}" Opacity="0.3"/>

                    <Button Height="30" MinWidth="70" Margin="0 0 8 0"
                            Content="{DynamicResource Delete}"
                            Command="{Binding CmdDeleteSelected}"
                            Style="{StaticResource ButtonBarPrimaryStyle}"
                            Background="{DynamicResource PrimaryMidBrush}"
                            Foreground="{DynamicResource PrimaryTextBrush}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                    <!-- Divider -->
                    <Border Width="1" Margin="0 5 8 5" Background="{DynamicResource PrimaryTextBrush}" Opacity="0.3"/>

                    <!-- Export action -->
                    <Button Height="30" MinWidth="70" Margin="0 0 0 0"
                            Content="{DynamicResource Export}"
                            Command="{Binding CmdExportSelectedToJson}"
                            Style="{StaticResource ButtonBarPrimaryStyle}"
                            Background="{DynamicResource PrimaryMidBrush}"
                            Foreground="{DynamicResource PrimaryTextBrush}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                </StackPanel>
            </Grid>
        </Grid>







        <!-- tag list: the page to config which tag should be display. -->
        <ContentControl s:View.Model="{Binding TagListViewModel}"
                        Visibility="{Binding TagListViewModel, 
                                                    Converter={StaticResource ConverterEqual2Collapsed}, 
                                                    ConverterParameter={x:Null}}"
        >
        </ContentControl>







        <!-- Shared tabs component -->
        <serverView:ServerTabsView />
    </Grid>
</serverView:ServerViewBase>
