<UserControl x:Class="_1RM.Controls.ServerLineItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:_1RM.View"
             xmlns:model="clr-namespace:_1RM.Model"
             xmlns:dao="clr-namespace:_1RM.Service.DataSource.DAO"
             xmlns:serverList="clr-namespace:_1RM.View.ServerView"
             d:DataContext="{d:DesignInstance view:ProtocolBaseViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="30" d:DesignWidth="800">

    <UserControl.Resources>

        <Style x:Key="LineItemSettingMenuListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource ControlBase}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Grid>
                                        <Border x:Name="GridContainer">
                                        </Border>
                                        <ContentPresenter x:Name="ContentPresenter"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="model:ProtocolAction">
                        <Button Padding="10" Style="{StaticResource ButtonBarPrimaryStyle}" 
                                Click="ServerMenuButton_OnClick"
                                CommandParameter="{Binding}"
                                HorizontalContentAlignment="Left"
                                Content="{Binding ActionName}">
                        </Button>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ItemsPanelTemplate x:Key="LineItemItemsTemplateWrapPanel">
            <WrapPanel />
        </ItemsPanelTemplate>

        <Style x:Key="TagBorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"></Setter>
            <Setter Property="CornerRadius" Value="2"></Setter>
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                    <Setter Property="Opacity" Value="0.9"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="LineItemDataTemplateTag" DataType="model:Tag">
            <Border Margin="2,1" Padding="4,2"
                    CornerRadius="2"
                    VerticalAlignment="Center"
                    Tag="{Binding DataContext.TagsPanelViewModel, RelativeSource={RelativeSource AncestorType=serverList:ServerListPageView}}"
                    PreviewMouseDown="UIElement_OnPreviewMouseDown"
                    Cursor="Hand"
                    Style="{StaticResource TagBorderStyle}"
                    >
                <!--right click context menu-->
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{DynamicResource Unpin}" 
                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2Visible}}"
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource Pin}" 
                                  Visibility="{Binding IsPinned, Converter={StaticResource ConverterBool2VisibleInv}}"
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagPin}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource Rename}" 
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource Delete}" 
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource Connect}" 
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource 'Create desktop shortcut'}" 
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateDesktopShortcut}" 
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource 'Connect (New window)'}" 
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnectToNewTab}" 
                                  CommandParameter="{Binding}"/>
                    </ContextMenu>
                </Border.ContextMenu>
                <Border.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}, Path=DataContext.CmdTagAddIncluded}" CommandParameter="{Binding}" />
                    <MouseBinding Gesture="Ctrl+LeftClick" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}, Path=DataContext.CmdTagAddIncluded}" CommandParameter="{Binding}" />
                    <MouseBinding Gesture="Alt+LeftClick" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}, Path=DataContext.CmdTagAddExcluded}" CommandParameter="{Binding}" />
                </Border.InputBindings>
                <TextBlock Style="{StaticResource TextBlockBase}"
                   Text="{Binding Name}"
                   FontSize="{DynamicResource GlobalFontSizeSmall}"
                   FontWeight="Medium"
                   Foreground="{DynamicResource BackgroundTextBrush}">
        </TextBlock>
            </Border>
        </DataTemplate>


        <Style x:Key="SelectedCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Opacity" Value="0"></Setter>
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Grid,Path=IsMouseOver}" Value="True">
                    <Setter Property="Opacity" Value="1"></Setter>
                    <Setter Property="IsHitTestVisible" Value="True"></Setter>
                </DataTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" Value="1"></Setter>
                    <Setter Property="IsHitTestVisible" Value="True"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LineItemSettingMenuStyle" TargetType="Button" BasedOn="{StaticResource ButtonAccentStyle}">
            <Setter Property="Visibility" Value="Visible"></Setter>
            <Setter Property="Opacity" Value="0.6"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"></Setter>
                </Trigger>
                <DataTrigger Binding="{Binding ElementName=PopupCardSettingMenu, Path=IsOpen}" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryMidBrush}"></Setter>
                    <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"></Setter>
                    <Setter Property="Padding" Value="4"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Name="Grid" Background="Transparent">
        <!-- Terminus-style subtle background with border -->
        <Border Background="{DynamicResource BackgroundBrush}"
                BorderBrush="{DynamicResource PrimaryMidBrush}"
                BorderThickness="0,0,0,1"
                Margin="0,0,0,1"/>

        <!-- Subtle color indicator -->
        <Grid Opacity="0.15" Background="{Binding Server.ColorHex,Converter={StaticResource ConverterColorHexString2Brush}, Mode=OneWay}"
              Margin="0,0,0,1"/>

        <Grid>
            <Grid.Margin>
                <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
            </Grid.Margin>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Selector"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Span"></ColumnDefinition>
                <ColumnDefinition Width="*" SharedSizeGroup="Name"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Address"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="BriefNote"></ColumnDefinition>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Actions"></ColumnDefinition>
            </Grid.ColumnDefinitions>



            <Path Height="14" Width="14" UseLayoutRounding="True" Stretch="Uniform">
                <Path.Style>
                    <Style TargetType="Path">
                        <Setter Property="Data" Value="{StaticResource GeometryCloudDisconnected}"></Setter>
                        <Setter Property="Fill" Value="Red"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataSource.Status}" Value="{x:Static dao:EnumDatabaseStatus.OK}">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>

            <CheckBox Name="CbSelected"
                      Grid.Column="0" Margin="12 0"
                      Width="18" Height="18"
                      HorizontalAlignment="Left"
                      Style="{StaticResource SelectedCheckBoxStyle}"
                      Click="ItemsCheckBox_OnClick"
                      IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}">
            </CheckBox>

            <!--protocol name - Terminus style with monospace-friendly formatting-->
            <TextBlock Grid.Column="1" Margin="8 0 12 0"
                       Style="{StaticResource TextBlockBase}"
                       Text="{Binding Server.ProtocolDisplayName}"
                       FontFamily="{DynamicResource GlobalFontMono}"
                       FontSize="{DynamicResource GlobalFontSizeBody}"
                       FontWeight="SemiBold"
                       Opacity="0.8"
                       Foreground="{DynamicResource AccentTextBrush}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center">
            </TextBlock>


            <!-- Action button column - modern menu button -->
            <Button Grid.Column="6"
                    x:Name="BtnSettingMenu"
                    Margin="8 0 12 0"
                    Width="24" Height="24"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource LineItemSettingMenuStyle}"
                    Click="BtnSettingMenu_OnClick" Opacity="1">
                <Path Name="Symbol" Margin="2"
                      Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"
                      Fill="{DynamicResource PrimaryTextBrush}"
                      Stretch="Uniform" />
            </Button>

            <!--icon - Terminus style compact and clean -->
            <Image Grid.Column="2"
                   Width="28" HorizontalAlignment="Center" Margin="8 0"
                   Source="{Binding Server.IconImg}"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   Opacity="0.9">
            </Image>

            <!--display name - Terminus style clean and prominent -->
            <TextBlock Grid.Column="3" ToolTip="{Binding DisplayName}" Background="Transparent"
                       Style="{StaticResource TextBlockBase}"
                       FontSize="{DynamicResource GlobalFontSizeBody}"
                       FontWeight="Medium"
                       Margin="8 0 12 0"
                       VerticalAlignment="Center"
                       TextTrimming="CharacterEllipsis"
                       Foreground="{DynamicResource BackgroundTextBrush}"
                       Text="{Binding Server.DisplayName}">
            </TextBlock>

            <!--tags - Terminus style minimal and compact -->
            <ItemsControl Grid.Column="3"
                          Margin="0 0 8 0"
                          MaxWidth="120"
                          VerticalAlignment="Center" HorizontalAlignment="Right"
                          ItemsSource="{Binding Tags}"
                          ItemsPanel="{StaticResource LineItemItemsTemplateWrapPanel}"
                          ItemTemplate="{StaticResource LineItemDataTemplateTag}">
                <ItemsControl.ToolTip>
                    <Label Content="&#10;"
                           ContentStringFormat="{DynamicResource tag_tooltips}"/>
                </ItemsControl.ToolTip>
            </ItemsControl>

            <!--brief note - Terminus style subtle -->
            <ContentControl Grid.Column="5"
                            Margin="0 0 8 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            MaxWidth="180"
                            Opacity="0.7"
                            Content="{Binding HoverNoteDisplayControl}">
            </ContentControl>

            <!--address - Terminus style monospace and clean -->
            <TextBlock Margin="12 0 8 0" MaxWidth="180"
                       Style="{StaticResource TextBlockBase}"
                       Grid.Column="4"
                       Background="Transparent"
                       ToolTip="{Binding Server.SubTitle}"
                       FontFamily="{DynamicResource GlobalFontMono}"
                       FontSize="{DynamicResource GlobalFontSizeBody}"
                       Opacity="0.8"
                       VerticalAlignment="Center"
                       TextTrimming="CharacterEllipsis"
                       Foreground="{DynamicResource PrimaryTextBrush}"
                       Panel.ZIndex="1"
                       Text="{Binding Server.SubTitle}">
            </TextBlock>
        </Grid>


        <Popup Name="PopupCardSettingMenu"
               AllowsTransparency="True"
               PlacementTarget="{Binding ElementName=BtnSettingMenu}" StaysOpen="False">
            <Border Padding="0,0,2,2">
                <Border.Effect>
                    <DropShadowEffect Opacity="0.3" ShadowDepth="2" BlurRadius="6" Color="Black"/>
                </Border.Effect>
                <Border MinWidth="100" Background="{DynamicResource PrimaryDarkBrush}"
                      BorderBrush="{DynamicResource PrimaryMidBrush}"
                      BorderThickness="1">
                        <ListBox ItemsSource="{Binding Actions}"
                             Style="{StaticResource LineItemSettingMenuListBoxStyle}"
                             BorderThickness="0"
                             Padding="2">
                        </ListBox>
                    </Border>
            </Border>
        </Popup>

    </Grid>
</UserControl>
