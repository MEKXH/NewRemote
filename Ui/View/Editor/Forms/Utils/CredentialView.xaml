<UserControl x:Class="_1RM.View.Editor.Forms.Utils.CredentialView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:_1RM.Controls"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:utils="clr-namespace:_1RM.View.Editor.Forms.Utils"
             xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance utils:CredentialViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="TextBlock" x:Key="RowHeader">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        </Style>

        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        </Style>
    </UserControl.Resources>

    <StackPanel>
        <!-- 凭据模式选择 -->
        <Border Margin="0,0,0,12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="认证模式"
                           Style="{StaticResource RowHeader}"/>

                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="15,0,0,0">
                    <Button Padding="12 6"
                            Command="{Binding CmdUseManuallyCredential}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource User}"/>
                            <TextBlock Text=" &amp; "/>
                            <TextBlock Text="{DynamicResource Password}"/>
                        </StackPanel>
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarAccentStyle}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedCredentialName}" Value="">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="{Binding StrBtnUseCredentialsVault}"
                            Padding="12 6"
                            Command="{Binding CmdUseCredentialsVault}"
                            Margin="8 0 0 0">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarAccentStyle}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedCredentialName}" Value="">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Separator -->
        <Border Height="1" Background="{DynamicResource PrimaryMidBrush}" Opacity="0.3" Margin="0,0,0,12"/>

        <!-- 凭据详情内容 -->
        <StackPanel Margin="0,0,0,12">
            <!-- 选择已有凭据 (当选择了凭据保管库时显示) -->
            <Border Margin="0,0,0,12"
                    Visibility="{Binding SelectedCredentialName, Converter={StaticResource ConverterEqual2Collapsed}, ConverterParameter=''}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="选择凭据"
                               Style="{StaticResource RowHeader}"/>

                    <ComboBox Grid.Column="1"
                              SelectedItem="{Binding SelectedCredentialName}"
                              ItemsSource="{Binding CredentialNames}"
                              Height="28"
                              VerticalAlignment="Center"
                              Margin="15,0,0,0"/>
                </Grid>
            </Border>

            <!-- 用户名 (手动输入凭据时显示) -->
            <Border Margin="0,0,0,12"
                    Visibility="{Binding SelectedCredentialName, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter=''}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{DynamicResource User}"
                               Style="{StaticResource RowHeader}"/>

                    <TextBox Grid.Column="1"
                             Text="{Binding New.UserName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}"
                             Margin="15,0,0,0"/>
                </Grid>
            </Border>

            <!-- 密码 (当不使用私钥时显示) -->
            <Border Margin="0,0,0,12">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsUsePrivateKey}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{DynamicResource Password}"
                               Style="{StaticResource RowHeader}"/>

                    <controls:PasswordInput Grid.Column="1"
                                           Password="{Binding New.Password, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}"
                                           Height="28"
                                           Margin="15,0,0,0"/>
                </Grid>
            </Border>

            <!-- 私钥文件路径 (当使用私钥时显示) -->
            <Border Margin="0,0,0,12">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsUsePrivateKey}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{DynamicResource 'Private key'}"
                               Style="{StaticResource RowHeader}"/>

                    <TextBox Grid.Column="1"
                             Name="TbPrivateKey"
                             Text="{Binding New.PrivateKey}"
                             Height="28"
                             VerticalAlignment="Center"
                             Margin="15,0,8,0"/>
                    <Button Grid.Column="2"
                            VerticalAlignment="Center"
                            Height="28"
                            Padding="16,4"
                            Style="{StaticResource ButtonPrimaryStyle}"
                            Content="{DynamicResource Select}"
                            Click="{s:Action ButtonSelectPrivateKey_OnClick}"/>
                </Grid>
            </Border>

            <!-- 使用私钥选项 (仅当协议支持私钥时显示) -->
            <Border Margin="0,0,0,12"
                    Visibility="{Binding ShowPrivateKeyInput, Converter={StaticResource ConverterBool2Visible}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="120"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text=""
                               Style="{StaticResource RowHeader}"/>

                    <CheckBox Grid.Column="1"
                              Content="{DynamicResource 'Use private key'}"
                              IsChecked="{Binding IsUsePrivateKey}"
                              VerticalAlignment="Center"
                              Margin="15,0,0,0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedCredentialName}" Value="">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=SelectedCredentialName}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </Grid>
            </Border>
        </StackPanel>
    </StackPanel>
</UserControl>